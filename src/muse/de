#!/usr/bin/env lua
-- vim : filetype=lua ts=2 sw=2 et :
local THE=require"z"[[
de [OPTIONS]

Tree learner (binary splits on numerics using Gaussian approximation)
(c)2021 Tim Menzies <timm@ieee.org> MIT license.
   
OPTIONS:
  -debug    X   run one test, show stackdumps on fail     = pass
  -h            Show help                                 = false
  -seed     X   Random number seed;                       = 10019
  -todo     X   Pass/fail tests to run at start time      = pass]]
----------------------------------------------------------------------------------------
local sort,keys,map
function sort(t,f)    table.sort(t,f);   return t end
function keys(t,   u) u={};for k,_ in pairs(t) do u[1+#u]=k       end; return sort(u) end
function map(t,f,  u) u={};for k,v in pairs(t) do u[1+#u] =f(k,v) end; return u       end

local fmt,out,shout
fmt = string.format
function shout(x) print(out(x)) end
function out(t,   u,key,val) -- convert nested tables to a string
  function key(_,k) return string.format(":%s %s", k, out(t[k])) end
  function val(_,v) return out(v) end
  if type(t) ~= "table" then return tostring(t) end
  u = #t>0 and map(t, val) or map(keys(t), key) 
  return (t._is or "").."{"..table.concat(u," ").."}" end 
----------------------------------------------------------------------------------------
local go={}
function go.pass() return true end
function go.bad()  assert(false) end
function go.the()  shout(THE) end

THE(go) 
